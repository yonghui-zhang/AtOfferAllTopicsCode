#include<stdio.h>
/***从1到n整数中1出现的次数***/

int num[10];//用于存储n的每一位
int flag = 0;//数组当前元素个数
bool overflow = false;//判断数组是否越界
/*
* 得到数的每一位
*/ 
void getEveryDigit(int n)
{
	while(n/10)
	{
	   if(flag >= 10)
	   {
		  overflow = true;
          return ;
	   }
       num[flag] = n % 10;
	   n = n / 10;
	   flag++;
	}
	num[flag] = n;
	flag++;
}
/*
* 从个位入手，向高位进军
*/
int getNumOneTimesFromOneToN(int n)
{
   int sum = 0;
   int times = 1;//当前段的1个数
   int tens = 10;//10的N次方
   for(int i=0;i<flag;i++)
   {
	   /***计算每一位上的1的个数****/
	   if(i == flag-1)
	   {
		  /***最后一位没有最高位，特殊处理**/
           sum = sum + (n%(tens/10)+1);
	   }else{
           if(num[i] >= 1)
		   {
              sum = sum + (n/tens+1)*times;
		   }else{
              sum = sum + (n/tens)*times;
		   }
	       times = tens;
		   tens = tens * 10;
	   }
   }
   return sum;
}
int main()
{
  int n = 1234567890;
  if(n <= 0)//鲁棒性
  {
     return ;
  }
  getEveryDigit(n);
  if(overflow)
  {
     printf("数组越界!\n");
	 return ;
  }
  int sum = getNumOneTimesFromOneToN(n);
  printf("从1到%d中1出现的次数为: %d\n", n, sum);
}